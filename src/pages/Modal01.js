import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Modal, Button, Container } from 'react-bootstrap';
import Icon from '@mdi/react';
import { mdiClose, mdiMapMarker } from '@mdi/js';
const Modal01 = ({ show, onHide, title = '사고정보 입력' }) => {
    const [windowWidth, setWindowWidth] = useState(window.innerWidth);
    const isAccordionView = windowWidth < 768;
    const rows = [
        {
            label: '사고시각',
            type: 'datetime',
            options: ['사고발생 시각', '0000-00-00', '0000-00-00'],
            required: true,
        },
        { label: '발생위치', type: 'location', required: true },
        { label: '사고선박명', type: 'input' },
        { label: '유출유종', type: 'select', options: ['KuwaitM', 'KuwaitM', 'KuwaitM'] },
        { label: '유출량', type: 'input', subType: 'triple' },
        { label: '예측수행시간', type: 'select', options: ['0000-00-00', '0000-00-00', '0000-00-00'] },
    ];
    const lines = rows.map((row, i) => (_jsxs("div", { className: "modal584-line", children: [_jsxs("div", { className: "modal584-line-text", children: [row.label, row.required && _jsx("span", { className: "required-mark", children: "*" })] }), _jsx("div", { className: "modal584-line-sub", children: row.type === 'datetime' ? (_jsxs("div", { className: "datetime-wrapper", children: [_jsx("select", { className: "form-select", children: row.options?.map((opt, idx) => (_jsx("option", { children: opt }, idx))) }), _jsx("input", { type: "text", className: "form-control datetime-input" }), _jsx("span", { children: ":" }), _jsx("input", { type: "text", className: "form-control datetime-input" })] })) : row.type === 'location' ? (_jsxs("div", { className: "location-grid-wrapper", children: [_jsxs("div", { className: "location-grid", children: [_jsxs("div", { className: "location-row", children: [_jsx("div", { className: "location-label", children: "\uC704\uB3C4" }), _jsx("input", { className: "location-cell" }), _jsx("input", { className: "location-cell" }), _jsx("input", { className: "location-cell" }), _jsx("span", { className: "location-equal", children: "=" }), _jsx("input", { className: "location-cell" })] }), _jsxs("div", { className: "location-row", children: [_jsx("div", { className: "location-label", children: "\uACBD\uB3C4" }), _jsx("input", { className: "location-cell" }), _jsx("input", { className: "location-cell" }), _jsx("input", { className: "location-cell" }), _jsx("span", { className: "location-equal", children: "=" }), _jsx("input", { className: "location-cell" })] })] }), _jsx("div", { className: "location-btn-wrapper", children: _jsxs("button", { className: "location-btn", children: [_jsx("span", { className: "icon-wrapper", children: _jsx(Icon, { path: mdiMapMarker, size: 1, color: "#FF0000" }) }), _jsx("br", {}), "\uC9C0\uB3C4\uC5D0\uC11C", _jsx("br", {}), "\uC9C1\uC811 \uC785\uB825"] }) })] })) : row.type === 'input' ? (row.subType === 'triple' ? (_jsxs("div", { className: "oil-amount-wrapper", children: [_jsx("input", { type: "text", className: "form-control oil-amount-input" }), _jsx("span", { children: "KL=" }), _jsx("input", { type: "text", className: "form-control oil-amount-input" }), _jsx("span", { children: "BBL=" }), _jsx("input", { type: "text", className: "form-control oil-amount-input" }), _jsx("span", { children: "metric ton" })] })) : (_jsx("input", { type: "text", className: "form-control" }))) : row.type === 'textarea' ? (_jsx("textarea", { className: "form-control" })) : row.type === 'select' ? (row.label === '유출유종' ? (_jsxs("div", { className: "select-radio-wrapper", children: [_jsx("select", { className: "form-select", children: row.options?.map((opt, idx) => (_jsx("option", { children: opt }, idx))) }), _jsxs("div", { className: "radio-group", children: [_jsxs("label", { className: "radio-item", children: [_jsx("input", { type: "radio", name: "oilType", value: "option1" }), " \uBE44\uC5F0\uC18D\uC720\uCD9C"] }), _jsxs("label", { className: "radio-item", children: [_jsx("input", { type: "radio", name: "oilType", value: "option2" }), " \uC5F0\uC18D\uC720\uCD9C"] })] })] })) : (_jsx("select", { className: "form-select", children: row.options?.map((opt, idx) => (_jsx("option", { children: opt }, idx))) }))) : null })] }, i)));
    return (_jsxs(Modal, { show: show, onHide: onHide, centered: true, dialogClassName: `modal584-dialog ${!isAccordionView ? 'mobile-view' : ''}`, contentClassName: "modal584-content", className: "modal584-wrapper", children: [_jsxs(Modal.Header, { className: "modal584-header d-flex align-items-center", children: [_jsx("h5", { className: "mb-0 modal584-title", children: title }), _jsx(Button, { variant: "link", className: "ms-auto p-0 border-0", onClick: onHide, "aria-label": "\uB2EB\uAE30", children: _jsx(Icon, { path: mdiClose, size: 1, color: "#fff" }) })] }), _jsxs(Modal.Body, { className: "modal584-body", children: [_jsx(Container, { fluid: true, style: { padding: 0 }, children: lines }), _jsxs("div", { className: "modal-center-btn-wrapper", children: [_jsx("span", { children: "* \uB2E4\uB978 \uC0AC\uC6A9\uC790\uC758 \uC608\uCE21\uBAA8\uB378 \uC791\uC5C5 \uC2DC \uC9C0\uC5F0\uB420 \uC218 \uC788\uC73C\uB2C8 \uD655\uC778\uD558\uC138\uC694." }), _jsx("button", { className: "modal-center-btn", children: "\uC608\uCE21 \uC2DC\uC791" })] })] }), _jsxs(Modal.Footer, { className: "modal584-footer", children: [_jsx(Button, { className: "modal584-footer-btn", children: "\uC608\uCE21\uBAA8\uB378 \uB300\uAE30 \uD604\uD669" }), _jsx(Button, { className: "modal584-footer-btn", children: "\uACFC\uAC70 \uC0AC\uACE0 \uC608\uCE21\uC870\uD68C" })] })] }));
};
export default Modal01;
